#!/usr/bin/env python3

from os.path import exists
from time import sleep
from subprocess import Popen, call
import json


def start_tor():
    Popen(['tor'])


def get_tor_service_hostname():
    filename = '/var/lib/tor/hidden_service/hostname'
    while not exists(filename):
        sleep(1)
    with open(filename, 'r') as file:
        hostname = file.read().replace('\n', '')
    return hostname


def get_ssb_config():
    return {
        'connections': {
            "incoming": {
                "net": [
                    {
                        "scope": "public",
                        "external": get_tor_service_hostname(),
                        "transform": "shs",
                        "port": 8008
                    },
                    {
                        "scope": "private",
                        "transform": "shs",
                        "port": 8008,
                        "host": "localhost"
                    }
                ]
            },
            "outgoing": {
                "onion": [{"transform": "shs"}]
            }
        }
    }


def write_ssb_config():
    with open("/root/.ssbrc", "w", encoding='utf-8') as file:
        json.dump(get_ssb_config(), file, ensure_ascii=False, indent=2)


def start_ssb():
    call(['npm', 'start'])


if __name__ == '__main__':
    start_tor()
    write_ssb_config()
    start_ssb()
